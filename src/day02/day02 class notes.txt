Java Bootcamp Day02

Topics:
		17. OOP Inheritance
		18. Method Overriding
        19. Final keyword
        20. OOP Abstraction
        21. Abstract Class vs Interface
        22. OOP Polymorphism
        23. Reference Type Castings: Upcasting vs DownCasting
        24. Exceptions: checked & unchecked
        25. Exception Handling
        26. final vs finally vs finalize
        27. garbage collection & garbage collector
        28. Collections: List, Set, Queue
        29. Iterable & Iterator
        30. Maps



17. OOP Inheritance: Building IS A relationship between classes (parent/child)
            

        ClassA extends ClassB

        ClassC extends ClassB

        ClassD extends ClassC

        sub-class: Inherits the accessible variables and methods from super class.
                   Can have its own unique variables and methods


        super-class: Inherits NOTHING from sub-class.
                    Can only contain common variables and methods of all sub classes


        A class can extend one class ONLY

        A class can implement MULTIPLE interfaces


        In My framework:

                TestBase:

                        driver
                        action

                        response
                        url..

                        @BeforeMethod
                        setUp(){
                            open browser
                            maximize browser
                            login...

                        }

                        @AferMethod
                        tearDown(){
                                quit
                                resport
                        }


                TestCasesClass1 extends TestBase

                        @Test

                TestCasesClass2 extends TestBase


                TestCasesClass3 extends TestBase


                TestCasesClass4 extends TestBase


        In My framework:

            BasePage
                BasePage(){
                    PageFactory.initElement(driver, this)
                }

                login()

                ...

            HomePage extends BasePage

            page2 extends BasePage

            page3 extends BasePage

            ....


18 Method overriding: Giving different implementations to the method
                      MUST happen in sub class

                      Access Modifier must be same or more visible


                      driver.get()


















